// Code generated by protoc-gen-go. DO NOT EDIT.
// source: light.proto

package light

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetParams struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	ID                   int32    `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetParams) Reset()         { *m = GetParams{} }
func (m *GetParams) String() string { return proto.CompactTextString(m) }
func (*GetParams) ProtoMessage()    {}
func (*GetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{0}
}
func (m *GetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetParams.Unmarshal(m, b)
}
func (m *GetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetParams.Marshal(b, m, deterministic)
}
func (dst *GetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetParams.Merge(dst, src)
}
func (m *GetParams) XXX_Size() int {
	return xxx_messageInfo_GetParams.Size(m)
}
func (m *GetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetParams proto.InternalMessageInfo

func (m *GetParams) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *GetParams) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GetParams) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type ListParams struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListParams) Reset()         { *m = ListParams{} }
func (m *ListParams) String() string { return proto.CompactTextString(m) }
func (*ListParams) ProtoMessage()    {}
func (*ListParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{1}
}
func (m *ListParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListParams.Unmarshal(m, b)
}
func (m *ListParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListParams.Marshal(b, m, deterministic)
}
func (dst *ListParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListParams.Merge(dst, src)
}
func (m *ListParams) XXX_Size() int {
	return xxx_messageInfo_ListParams.Size(m)
}
func (m *ListParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ListParams.DiscardUnknown(m)
}

var xxx_messageInfo_ListParams proto.InternalMessageInfo

func (m *ListParams) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ListParams) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type ToggleParams struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	ID                   int32    `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToggleParams) Reset()         { *m = ToggleParams{} }
func (m *ToggleParams) String() string { return proto.CompactTextString(m) }
func (*ToggleParams) ProtoMessage()    {}
func (*ToggleParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{2}
}
func (m *ToggleParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleParams.Unmarshal(m, b)
}
func (m *ToggleParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleParams.Marshal(b, m, deterministic)
}
func (dst *ToggleParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleParams.Merge(dst, src)
}
func (m *ToggleParams) XXX_Size() int {
	return xxx_messageInfo_ToggleParams.Size(m)
}
func (m *ToggleParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleParams.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleParams proto.InternalMessageInfo

func (m *ToggleParams) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ToggleParams) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ToggleParams) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type NewParams struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewParams) Reset()         { *m = NewParams{} }
func (m *NewParams) String() string { return proto.CompactTextString(m) }
func (*NewParams) ProtoMessage()    {}
func (*NewParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{3}
}
func (m *NewParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewParams.Unmarshal(m, b)
}
func (m *NewParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewParams.Marshal(b, m, deterministic)
}
func (dst *NewParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewParams.Merge(dst, src)
}
func (m *NewParams) XXX_Size() int {
	return xxx_messageInfo_NewParams.Size(m)
}
func (m *NewParams) XXX_DiscardUnknown() {
	xxx_messageInfo_NewParams.DiscardUnknown(m)
}

var xxx_messageInfo_NewParams proto.InternalMessageInfo

func (m *NewParams) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *NewParams) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type SearchParams struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Devices              []string `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchParams) Reset()         { *m = SearchParams{} }
func (m *SearchParams) String() string { return proto.CompactTextString(m) }
func (*SearchParams) ProtoMessage()    {}
func (*SearchParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{4}
}
func (m *SearchParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchParams.Unmarshal(m, b)
}
func (m *SearchParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchParams.Marshal(b, m, deterministic)
}
func (dst *SearchParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchParams.Merge(dst, src)
}
func (m *SearchParams) XXX_Size() int {
	return xxx_messageInfo_SearchParams.Size(m)
}
func (m *SearchParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchParams.DiscardUnknown(m)
}

var xxx_messageInfo_SearchParams proto.InternalMessageInfo

func (m *SearchParams) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SearchParams) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *SearchParams) GetDevices() []string {
	if m != nil {
		return m.Devices
	}
	return nil
}

type SetOperation struct {
	On                   bool               `protobuf:"varint,1,opt,name=on,proto3" json:"on,omitempty"`
	Bri                  int32              `protobuf:"varint,2,opt,name=bri,proto3" json:"bri,omitempty"`
	Hue                  int32              `protobuf:"varint,3,opt,name=hue,proto3" json:"hue,omitempty"`
	Sat                  int32              `protobuf:"varint,4,opt,name=sat,proto3" json:"sat,omitempty"`
	Xy                   map[string]float32 `protobuf:"bytes,5,rep,name=xy,proto3" json:"xy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Ct                   int32              `protobuf:"varint,6,opt,name=ct,proto3" json:"ct,omitempty"`
	Alert                string             `protobuf:"bytes,7,opt,name=alert,proto3" json:"alert,omitempty"`
	Effect               string             `protobuf:"bytes,8,opt,name=effect,proto3" json:"effect,omitempty"`
	Colormode            string             `protobuf:"bytes,9,opt,name=colormode,proto3" json:"colormode,omitempty"`
	Reachable            bool               `protobuf:"varint,10,opt,name=reachable,proto3" json:"reachable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SetOperation) Reset()         { *m = SetOperation{} }
func (m *SetOperation) String() string { return proto.CompactTextString(m) }
func (*SetOperation) ProtoMessage()    {}
func (*SetOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{5}
}
func (m *SetOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetOperation.Unmarshal(m, b)
}
func (m *SetOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetOperation.Marshal(b, m, deterministic)
}
func (dst *SetOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetOperation.Merge(dst, src)
}
func (m *SetOperation) XXX_Size() int {
	return xxx_messageInfo_SetOperation.Size(m)
}
func (m *SetOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_SetOperation.DiscardUnknown(m)
}

var xxx_messageInfo_SetOperation proto.InternalMessageInfo

func (m *SetOperation) GetOn() bool {
	if m != nil {
		return m.On
	}
	return false
}

func (m *SetOperation) GetBri() int32 {
	if m != nil {
		return m.Bri
	}
	return 0
}

func (m *SetOperation) GetHue() int32 {
	if m != nil {
		return m.Hue
	}
	return 0
}

func (m *SetOperation) GetSat() int32 {
	if m != nil {
		return m.Sat
	}
	return 0
}

func (m *SetOperation) GetXy() map[string]float32 {
	if m != nil {
		return m.Xy
	}
	return nil
}

func (m *SetOperation) GetCt() int32 {
	if m != nil {
		return m.Ct
	}
	return 0
}

func (m *SetOperation) GetAlert() string {
	if m != nil {
		return m.Alert
	}
	return ""
}

func (m *SetOperation) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *SetOperation) GetColormode() string {
	if m != nil {
		return m.Colormode
	}
	return ""
}

func (m *SetOperation) GetReachable() bool {
	if m != nil {
		return m.Reachable
	}
	return false
}

type Scan struct {
	Lastscan             string   `protobuf:"bytes,1,opt,name=lastscan,proto3" json:"lastscan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scan) Reset()         { *m = Scan{} }
func (m *Scan) String() string { return proto.CompactTextString(m) }
func (*Scan) ProtoMessage()    {}
func (*Scan) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{6}
}
func (m *Scan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scan.Unmarshal(m, b)
}
func (m *Scan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scan.Marshal(b, m, deterministic)
}
func (dst *Scan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scan.Merge(dst, src)
}
func (m *Scan) XXX_Size() int {
	return xxx_messageInfo_Scan.Size(m)
}
func (m *Scan) XXX_DiscardUnknown() {
	xxx_messageInfo_Scan.DiscardUnknown(m)
}

var xxx_messageInfo_Scan proto.InternalMessageInfo

func (m *Scan) GetLastscan() string {
	if m != nil {
		return m.Lastscan
	}
	return ""
}

type SearchResult struct {
	Success              map[string]string `protobuf:"bytes,1,rep,name=success,proto3" json:"success,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SearchResult) Reset()         { *m = SearchResult{} }
func (m *SearchResult) String() string { return proto.CompactTextString(m) }
func (*SearchResult) ProtoMessage()    {}
func (*SearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{7}
}
func (m *SearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResult.Unmarshal(m, b)
}
func (m *SearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResult.Marshal(b, m, deterministic)
}
func (dst *SearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResult.Merge(dst, src)
}
func (m *SearchResult) XXX_Size() int {
	return xxx_messageInfo_SearchResult.Size(m)
}
func (m *SearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResult proto.InternalMessageInfo

func (m *SearchResult) GetSuccess() map[string]string {
	if m != nil {
		return m.Success
	}
	return nil
}

type State struct {
	On                   bool      `protobuf:"varint,1,opt,name=on,proto3" json:"on,omitempty"`
	Bri                  float64   `protobuf:"fixed64,2,opt,name=bri,proto3" json:"bri,omitempty"`
	Alert                string    `protobuf:"bytes,3,opt,name=alert,proto3" json:"alert,omitempty"`
	Mode                 string    `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Reachable            bool      `protobuf:"varint,5,opt,name=reachable,proto3" json:"reachable,omitempty"`
	Hue                  float64   `protobuf:"fixed64,6,opt,name=hue,proto3" json:"hue,omitempty"`
	Sat                  float64   `protobuf:"fixed64,7,opt,name=sat,proto3" json:"sat,omitempty"`
	Xy                   []float64 `protobuf:"fixed64,8,rep,packed,name=xy,proto3" json:"xy,omitempty"`
	Ct                   float64   `protobuf:"fixed64,9,opt,name=ct,proto3" json:"ct,omitempty"`
	Effect               string    `protobuf:"bytes,10,opt,name=effect,proto3" json:"effect,omitempty"`
	Transitiontime       float64   `protobuf:"fixed64,11,opt,name=transitiontime,proto3" json:"transitiontime,omitempty"`
	BriInc               float64   `protobuf:"fixed64,12,opt,name=bri_inc,json=briInc,proto3" json:"bri_inc,omitempty"`
	SatInc               float64   `protobuf:"fixed64,13,opt,name=sat_inc,json=satInc,proto3" json:"sat_inc,omitempty"`
	HueInc               float64   `protobuf:"fixed64,14,opt,name=hue_inc,json=hueInc,proto3" json:"hue_inc,omitempty"`
	CtInc                float64   `protobuf:"fixed64,15,opt,name=ct_inc,json=ctInc,proto3" json:"ct_inc,omitempty"`
	XyInc                []float64 `protobuf:"fixed64,16,rep,packed,name=xy_inc,json=xyInc,proto3" json:"xy_inc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{8}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (dst *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(dst, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetOn() bool {
	if m != nil {
		return m.On
	}
	return false
}

func (m *State) GetBri() float64 {
	if m != nil {
		return m.Bri
	}
	return 0
}

func (m *State) GetAlert() string {
	if m != nil {
		return m.Alert
	}
	return ""
}

func (m *State) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *State) GetReachable() bool {
	if m != nil {
		return m.Reachable
	}
	return false
}

func (m *State) GetHue() float64 {
	if m != nil {
		return m.Hue
	}
	return 0
}

func (m *State) GetSat() float64 {
	if m != nil {
		return m.Sat
	}
	return 0
}

func (m *State) GetXy() []float64 {
	if m != nil {
		return m.Xy
	}
	return nil
}

func (m *State) GetCt() float64 {
	if m != nil {
		return m.Ct
	}
	return 0
}

func (m *State) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *State) GetTransitiontime() float64 {
	if m != nil {
		return m.Transitiontime
	}
	return 0
}

func (m *State) GetBriInc() float64 {
	if m != nil {
		return m.BriInc
	}
	return 0
}

func (m *State) GetSatInc() float64 {
	if m != nil {
		return m.SatInc
	}
	return 0
}

func (m *State) GetHueInc() float64 {
	if m != nil {
		return m.HueInc
	}
	return 0
}

func (m *State) GetCtInc() float64 {
	if m != nil {
		return m.CtInc
	}
	return 0
}

func (m *State) GetXyInc() []float64 {
	if m != nil {
		return m.XyInc
	}
	return nil
}

type SoftwareUpdate struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Lastinstall          string   `protobuf:"bytes,2,opt,name=lastinstall,proto3" json:"lastinstall,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SoftwareUpdate) Reset()         { *m = SoftwareUpdate{} }
func (m *SoftwareUpdate) String() string { return proto.CompactTextString(m) }
func (*SoftwareUpdate) ProtoMessage()    {}
func (*SoftwareUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{9}
}
func (m *SoftwareUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftwareUpdate.Unmarshal(m, b)
}
func (m *SoftwareUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftwareUpdate.Marshal(b, m, deterministic)
}
func (dst *SoftwareUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftwareUpdate.Merge(dst, src)
}
func (m *SoftwareUpdate) XXX_Size() int {
	return xxx_messageInfo_SoftwareUpdate.Size(m)
}
func (m *SoftwareUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftwareUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SoftwareUpdate proto.InternalMessageInfo

func (m *SoftwareUpdate) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SoftwareUpdate) GetLastinstall() string {
	if m != nil {
		return m.Lastinstall
	}
	return ""
}

type Streaming struct {
	Renderer             bool     `protobuf:"varint,1,opt,name=renderer,proto3" json:"renderer,omitempty"`
	Proxy                bool     `protobuf:"varint,2,opt,name=proxy,proto3" json:"proxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Streaming) Reset()         { *m = Streaming{} }
func (m *Streaming) String() string { return proto.CompactTextString(m) }
func (*Streaming) ProtoMessage()    {}
func (*Streaming) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{10}
}
func (m *Streaming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Streaming.Unmarshal(m, b)
}
func (m *Streaming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Streaming.Marshal(b, m, deterministic)
}
func (dst *Streaming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Streaming.Merge(dst, src)
}
func (m *Streaming) XXX_Size() int {
	return xxx_messageInfo_Streaming.Size(m)
}
func (m *Streaming) XXX_DiscardUnknown() {
	xxx_messageInfo_Streaming.DiscardUnknown(m)
}

var xxx_messageInfo_Streaming proto.InternalMessageInfo

func (m *Streaming) GetRenderer() bool {
	if m != nil {
		return m.Renderer
	}
	return false
}

func (m *Streaming) GetProxy() bool {
	if m != nil {
		return m.Proxy
	}
	return false
}

type Capabilities struct {
	Streaming            *Streaming `protobuf:"bytes,1,opt,name=streaming,proto3" json:"streaming,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Capabilities) Reset()         { *m = Capabilities{} }
func (m *Capabilities) String() string { return proto.CompactTextString(m) }
func (*Capabilities) ProtoMessage()    {}
func (*Capabilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{11}
}
func (m *Capabilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Capabilities.Unmarshal(m, b)
}
func (m *Capabilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Capabilities.Marshal(b, m, deterministic)
}
func (dst *Capabilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Capabilities.Merge(dst, src)
}
func (m *Capabilities) XXX_Size() int {
	return xxx_messageInfo_Capabilities.Size(m)
}
func (m *Capabilities) XXX_DiscardUnknown() {
	xxx_messageInfo_Capabilities.DiscardUnknown(m)
}

var xxx_messageInfo_Capabilities proto.InternalMessageInfo

func (m *Capabilities) GetStreaming() *Streaming {
	if m != nil {
		return m.Streaming
	}
	return nil
}

type Light struct {
	State                *State          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Swupdate             *SoftwareUpdate `protobuf:"bytes,2,opt,name=swupdate,proto3" json:"swupdate,omitempty"`
	Type                 string          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Modelid              string          `protobuf:"bytes,5,opt,name=modelid,proto3" json:"modelid,omitempty"`
	Manufacturername     string          `protobuf:"bytes,6,opt,name=manufacturername,proto3" json:"manufacturername,omitempty"`
	Capabilities         *Capabilities   `protobuf:"bytes,7,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Uniqueid             string          `protobuf:"bytes,8,opt,name=uniqueid,proto3" json:"uniqueid,omitempty"`
	Swversion            string          `protobuf:"bytes,9,opt,name=swversion,proto3" json:"swversion,omitempty"`
	Swconfigid           string          `protobuf:"bytes,10,opt,name=swconfigid,proto3" json:"swconfigid,omitempty"`
	Productid            string          `protobuf:"bytes,11,opt,name=productid,proto3" json:"productid,omitempty"`
	ID                   int32           `protobuf:"varint,12,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Light) Reset()         { *m = Light{} }
func (m *Light) String() string { return proto.CompactTextString(m) }
func (*Light) ProtoMessage()    {}
func (*Light) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{12}
}
func (m *Light) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Light.Unmarshal(m, b)
}
func (m *Light) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Light.Marshal(b, m, deterministic)
}
func (dst *Light) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Light.Merge(dst, src)
}
func (m *Light) XXX_Size() int {
	return xxx_messageInfo_Light.Size(m)
}
func (m *Light) XXX_DiscardUnknown() {
	xxx_messageInfo_Light.DiscardUnknown(m)
}

var xxx_messageInfo_Light proto.InternalMessageInfo

func (m *Light) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Light) GetSwupdate() *SoftwareUpdate {
	if m != nil {
		return m.Swupdate
	}
	return nil
}

func (m *Light) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Light) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Light) GetModelid() string {
	if m != nil {
		return m.Modelid
	}
	return ""
}

func (m *Light) GetManufacturername() string {
	if m != nil {
		return m.Manufacturername
	}
	return ""
}

func (m *Light) GetCapabilities() *Capabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *Light) GetUniqueid() string {
	if m != nil {
		return m.Uniqueid
	}
	return ""
}

func (m *Light) GetSwversion() string {
	if m != nil {
		return m.Swversion
	}
	return ""
}

func (m *Light) GetSwconfigid() string {
	if m != nil {
		return m.Swconfigid
	}
	return ""
}

func (m *Light) GetProductid() string {
	if m != nil {
		return m.Productid
	}
	return ""
}

func (m *Light) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type LightState struct {
	On                   bool      `protobuf:"varint,1,opt,name=on,proto3" json:"on,omitempty"`
	Bri                  float64   `protobuf:"fixed64,2,opt,name=bri,proto3" json:"bri,omitempty"`
	Alert                string    `protobuf:"bytes,3,opt,name=alert,proto3" json:"alert,omitempty"`
	Xy                   []float64 `protobuf:"fixed64,4,rep,packed,name=xy,proto3" json:"xy,omitempty"`
	Effect               string    `protobuf:"bytes,5,opt,name=effect,proto3" json:"effect,omitempty"`
	Transitiontime       float64   `protobuf:"fixed64,6,opt,name=transitiontime,proto3" json:"transitiontime,omitempty"`
	BriInc               float64   `protobuf:"fixed64,7,opt,name=bri_inc,json=briInc,proto3" json:"bri_inc,omitempty"`
	XyInc                []float64 `protobuf:"fixed64,8,rep,packed,name=xy_inc,json=xyInc,proto3" json:"xy_inc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LightState) Reset()         { *m = LightState{} }
func (m *LightState) String() string { return proto.CompactTextString(m) }
func (*LightState) ProtoMessage()    {}
func (*LightState) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{13}
}
func (m *LightState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightState.Unmarshal(m, b)
}
func (m *LightState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightState.Marshal(b, m, deterministic)
}
func (dst *LightState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightState.Merge(dst, src)
}
func (m *LightState) XXX_Size() int {
	return xxx_messageInfo_LightState.Size(m)
}
func (m *LightState) XXX_DiscardUnknown() {
	xxx_messageInfo_LightState.DiscardUnknown(m)
}

var xxx_messageInfo_LightState proto.InternalMessageInfo

func (m *LightState) GetOn() bool {
	if m != nil {
		return m.On
	}
	return false
}

func (m *LightState) GetBri() float64 {
	if m != nil {
		return m.Bri
	}
	return 0
}

func (m *LightState) GetAlert() string {
	if m != nil {
		return m.Alert
	}
	return ""
}

func (m *LightState) GetXy() []float64 {
	if m != nil {
		return m.Xy
	}
	return nil
}

func (m *LightState) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

func (m *LightState) GetTransitiontime() float64 {
	if m != nil {
		return m.Transitiontime
	}
	return 0
}

func (m *LightState) GetBriInc() float64 {
	if m != nil {
		return m.BriInc
	}
	return 0
}

func (m *LightState) GetXyInc() []float64 {
	if m != nil {
		return m.XyInc
	}
	return nil
}

type SetStateParams struct {
	Update               *LightState `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
	Host                 string      `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	User                 string      `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	ID                   int32       `protobuf:"varint,4,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetStateParams) Reset()         { *m = SetStateParams{} }
func (m *SetStateParams) String() string { return proto.CompactTextString(m) }
func (*SetStateParams) ProtoMessage()    {}
func (*SetStateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_light_1b0c267dc22c87d2, []int{14}
}
func (m *SetStateParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetStateParams.Unmarshal(m, b)
}
func (m *SetStateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetStateParams.Marshal(b, m, deterministic)
}
func (dst *SetStateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetStateParams.Merge(dst, src)
}
func (m *SetStateParams) XXX_Size() int {
	return xxx_messageInfo_SetStateParams.Size(m)
}
func (m *SetStateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SetStateParams.DiscardUnknown(m)
}

var xxx_messageInfo_SetStateParams proto.InternalMessageInfo

func (m *SetStateParams) GetUpdate() *LightState {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *SetStateParams) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *SetStateParams) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SetStateParams) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func init() {
	proto.RegisterType((*GetParams)(nil), "light.GetParams")
	proto.RegisterType((*ListParams)(nil), "light.ListParams")
	proto.RegisterType((*ToggleParams)(nil), "light.ToggleParams")
	proto.RegisterType((*NewParams)(nil), "light.NewParams")
	proto.RegisterType((*SearchParams)(nil), "light.SearchParams")
	proto.RegisterType((*SetOperation)(nil), "light.SetOperation")
	proto.RegisterMapType((map[string]float32)(nil), "light.SetOperation.XyEntry")
	proto.RegisterType((*Scan)(nil), "light.Scan")
	proto.RegisterType((*SearchResult)(nil), "light.SearchResult")
	proto.RegisterMapType((map[string]string)(nil), "light.SearchResult.SuccessEntry")
	proto.RegisterType((*State)(nil), "light.State")
	proto.RegisterType((*SoftwareUpdate)(nil), "light.SoftwareUpdate")
	proto.RegisterType((*Streaming)(nil), "light.Streaming")
	proto.RegisterType((*Capabilities)(nil), "light.Capabilities")
	proto.RegisterType((*Light)(nil), "light.Light")
	proto.RegisterType((*LightState)(nil), "light.LightState")
	proto.RegisterType((*SetStateParams)(nil), "light.SetStateParams")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	All(ctx context.Context, in *ListParams, opts ...grpc.CallOption) (Service_AllClient, error)
	New(ctx context.Context, in *NewParams, opts ...grpc.CallOption) (*Scan, error)
	Search(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *GetParams, opts ...grpc.CallOption) (*Light, error)
	SetState(ctx context.Context, in *SetStateParams, opts ...grpc.CallOption) (*Light, error)
	Toggle(ctx context.Context, in *ToggleParams, opts ...grpc.CallOption) (*Light, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) All(ctx context.Context, in *ListParams, opts ...grpc.CallOption) (Service_AllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Service_serviceDesc.Streams[0], "/light.Service/All", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Service_AllClient interface {
	Recv() (*Light, error)
	grpc.ClientStream
}

type serviceAllClient struct {
	grpc.ClientStream
}

func (x *serviceAllClient) Recv() (*Light, error) {
	m := new(Light)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *serviceClient) New(ctx context.Context, in *NewParams, opts ...grpc.CallOption) (*Scan, error) {
	out := new(Scan)
	err := c.cc.Invoke(ctx, "/light.Service/New", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Search(ctx context.Context, in *SearchParams, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/light.Service/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Get(ctx context.Context, in *GetParams, opts ...grpc.CallOption) (*Light, error) {
	out := new(Light)
	err := c.cc.Invoke(ctx, "/light.Service/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SetState(ctx context.Context, in *SetStateParams, opts ...grpc.CallOption) (*Light, error) {
	out := new(Light)
	err := c.cc.Invoke(ctx, "/light.Service/SetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Toggle(ctx context.Context, in *ToggleParams, opts ...grpc.CallOption) (*Light, error) {
	out := new(Light)
	err := c.cc.Invoke(ctx, "/light.Service/Toggle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	All(*ListParams, Service_AllServer) error
	New(context.Context, *NewParams) (*Scan, error)
	Search(context.Context, *SearchParams) (*empty.Empty, error)
	Get(context.Context, *GetParams) (*Light, error)
	SetState(context.Context, *SetStateParams) (*Light, error)
	Toggle(context.Context, *ToggleParams) (*Light, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_All_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceServer).All(m, &serviceAllServer{stream})
}

type Service_AllServer interface {
	Send(*Light) error
	grpc.ServerStream
}

type serviceAllServer struct {
	grpc.ServerStream
}

func (x *serviceAllServer) Send(m *Light) error {
	return x.ServerStream.SendMsg(m)
}

func _Service_New_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).New(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/light.Service/New",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).New(ctx, req.(*NewParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/light.Service/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Search(ctx, req.(*SearchParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/light.Service/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Get(ctx, req.(*GetParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_SetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).SetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/light.Service/SetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).SetState(ctx, req.(*SetStateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Toggle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Toggle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/light.Service/Toggle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Toggle(ctx, req.(*ToggleParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "light.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "New",
			Handler:    _Service_New_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Service_Search_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Service_Get_Handler,
		},
		{
			MethodName: "SetState",
			Handler:    _Service_SetState_Handler,
		},
		{
			MethodName: "Toggle",
			Handler:    _Service_Toggle_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "All",
			Handler:       _Service_All_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "light.proto",
}

func init() { proto.RegisterFile("light.proto", fileDescriptor_light_1b0c267dc22c87d2) }

var fileDescriptor_light_1b0c267dc22c87d2 = []byte{
	// 1018 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x8e, 0x1b, 0xb5,
	0x17, 0xdf, 0x99, 0xc9, 0x4c, 0x32, 0x27, 0xf9, 0xe7, 0xbf, 0xb8, 0xdd, 0x32, 0x4a, 0x11, 0x8a,
	0xe6, 0xa2, 0x2c, 0x45, 0xa4, 0x90, 0x82, 0x8a, 0x56, 0x02, 0x09, 0xb5, 0xa5, 0xac, 0x54, 0x95,
	0x6a, 0x02, 0x12, 0x77, 0xc8, 0x71, 0x4e, 0x12, 0x8b, 0xc9, 0x4c, 0xb0, 0x3d, 0x9b, 0x9d, 0x17,
	0xe0, 0x8e, 0x87, 0xe0, 0x15, 0x78, 0x06, 0x9e, 0x87, 0x67, 0x40, 0xb6, 0xe7, 0x6b, 0x77, 0x25,
	0x56, 0xab, 0xde, 0xf9, 0xfc, 0xce, 0xb1, 0x7d, 0x3e, 0x7e, 0xc7, 0xc7, 0x30, 0x4c, 0xf9, 0x66,
	0xab, 0x66, 0x7b, 0x91, 0xab, 0x9c, 0xf8, 0x46, 0x98, 0x3c, 0xdc, 0xe4, 0xf9, 0x26, 0xc5, 0x27,
	0x06, 0x5c, 0x16, 0xeb, 0x27, 0xb8, 0xdb, 0xab, 0xd2, 0xda, 0xc4, 0xcf, 0x21, 0x7c, 0x85, 0xea,
	0x2d, 0x15, 0x74, 0x27, 0x09, 0x81, 0x5e, 0x21, 0x51, 0x44, 0xce, 0xd4, 0x39, 0x0d, 0x13, 0xb3,
	0xd6, 0xd8, 0x36, 0x97, 0x2a, 0x72, 0x2d, 0xa6, 0xd7, 0x64, 0x0c, 0xee, 0xf9, 0x8b, 0xc8, 0x9b,
	0x3a, 0xa7, 0x7e, 0xe2, 0x9e, 0xbf, 0x88, 0xbf, 0x00, 0x78, 0xcd, 0xe5, 0x1d, 0x4f, 0x89, 0xbf,
	0x83, 0xd1, 0x8f, 0xf9, 0x66, 0x93, 0xe2, 0x3b, 0xde, 0xfe, 0x14, 0xc2, 0x37, 0x78, 0xb8, 0xe3,
	0xe5, 0x6f, 0x61, 0xb4, 0x40, 0x2a, 0xd8, 0xf6, 0x8e, 0x97, 0x47, 0xd0, 0x5f, 0xe1, 0x05, 0x67,
	0x28, 0x23, 0x6f, 0xea, 0x9d, 0x86, 0x49, 0x2d, 0xc6, 0x7f, 0xb9, 0xfa, 0x48, 0xf5, 0xc3, 0x1e,
	0x05, 0x55, 0x3c, 0xcf, 0xb4, 0x9f, 0x79, 0x66, 0x0e, 0x1c, 0x24, 0x6e, 0x9e, 0x91, 0x63, 0xf0,
	0x96, 0x82, 0x9b, 0xd3, 0xfc, 0x44, 0x2f, 0x35, 0xb2, 0x2d, 0xb0, 0x0a, 0x45, 0x2f, 0x35, 0x22,
	0xa9, 0x8a, 0x7a, 0x16, 0x91, 0x54, 0x91, 0x4f, 0xc0, 0xbd, 0x2c, 0x23, 0x7f, 0xea, 0x9d, 0x0e,
	0xe7, 0x0f, 0x67, 0xb6, 0xbc, 0xdd, 0x6b, 0x66, 0x3f, 0x97, 0x2f, 0x33, 0x25, 0xca, 0xc4, 0xbd,
	0x2c, 0xf5, 0x95, 0x4c, 0x45, 0x81, 0x4d, 0x0d, 0x53, 0xe4, 0x3e, 0xf8, 0x34, 0x45, 0xa1, 0xa2,
	0xbe, 0x09, 0xc1, 0x0a, 0xe4, 0x01, 0x04, 0xb8, 0x5e, 0x23, 0x53, 0xd1, 0xc0, 0xc0, 0x95, 0x44,
	0x3e, 0x80, 0x90, 0xe5, 0x69, 0x2e, 0x76, 0xf9, 0x0a, 0xa3, 0xd0, 0xa8, 0x5a, 0x40, 0x6b, 0x05,
	0x52, 0xb6, 0xa5, 0xcb, 0x14, 0x23, 0x30, 0x51, 0xb5, 0xc0, 0xe4, 0x4b, 0xe8, 0x57, 0x8e, 0xe8,
	0x18, 0x7e, 0xc5, 0xb2, 0xca, 0xa4, 0x5e, 0x6a, 0x37, 0x2e, 0x68, 0x5a, 0xa0, 0x89, 0xdd, 0x4d,
	0xac, 0x70, 0xe6, 0x7e, 0xe5, 0xc4, 0x31, 0xf4, 0x16, 0x8c, 0x66, 0x64, 0x02, 0x83, 0x94, 0x4a,
	0x25, 0x19, 0xcd, 0xaa, 0x8d, 0x8d, 0x1c, 0xff, 0xee, 0xd4, 0xb5, 0x4a, 0x50, 0x16, 0xa9, 0x22,
	0x67, 0xd0, 0x97, 0x05, 0x63, 0x28, 0x65, 0xe4, 0x98, 0xbc, 0x4c, 0x9b, 0xbc, 0xb4, 0x56, 0xb3,
	0x85, 0x35, 0xb1, 0xc9, 0xa9, 0x37, 0x4c, 0xce, 0x60, 0xd4, 0x55, 0xdc, 0xe6, 0x6c, 0xd8, 0x75,
	0xf6, 0x1f, 0x17, 0xfc, 0x85, 0xa2, 0x0a, 0xff, 0xab, 0xb4, 0x8e, 0x2d, 0x6d, 0x93, 0x79, 0xaf,
	0x9b, 0x79, 0x02, 0x3d, 0x93, 0xdc, 0x9e, 0x65, 0xd4, 0xcd, 0xbc, 0xfa, 0xd7, 0xf2, 0x5a, 0x53,
	0x24, 0xb0, 0x27, 0x77, 0x28, 0xd2, 0xb7, 0x88, 0xa6, 0xc8, 0xd8, 0x50, 0x64, 0x30, 0xf5, 0x4e,
	0x9d, 0x0e, 0x0b, 0x42, 0x63, 0xa0, 0x59, 0xd0, 0xd6, 0x1b, 0xae, 0xd4, 0xfb, 0x11, 0x8c, 0x95,
	0xa0, 0x99, 0xe4, 0x9a, 0x47, 0x8a, 0xef, 0x30, 0x1a, 0x9a, 0x3d, 0xd7, 0x50, 0xf2, 0x3e, 0xf4,
	0x97, 0x82, 0xff, 0xc2, 0x33, 0x16, 0x8d, 0x8c, 0x41, 0xb0, 0x14, 0xfc, 0x3c, 0x63, 0x5a, 0x21,
	0xa9, 0x32, 0x8a, 0xff, 0x59, 0x85, 0xa4, 0xaa, 0x52, 0x6c, 0x0b, 0x34, 0x8a, 0xb1, 0x55, 0x6c,
	0x0b, 0xd4, 0x8a, 0x13, 0x08, 0x98, 0xdd, 0xf0, 0x7f, 0x83, 0xfb, 0x4c, 0x55, 0xf0, 0x65, 0x69,
	0xe0, 0x63, 0x13, 0x85, 0x7f, 0x59, 0x9e, 0x67, 0x2c, 0xfe, 0x1e, 0xc6, 0x8b, 0x7c, 0xad, 0x0e,
	0x54, 0xe0, 0x4f, 0xfb, 0x95, 0x4e, 0xfc, 0x7d, 0xf0, 0xa5, 0xae, 0x40, 0x55, 0x30, 0x2b, 0x90,
	0x29, 0x0c, 0x35, 0x5b, 0x78, 0x26, 0x15, 0x4d, 0xd3, 0xaa, 0x70, 0x5d, 0x28, 0xfe, 0x1a, 0xc2,
	0x85, 0x12, 0x48, 0x77, 0x3c, 0xdb, 0x68, 0xb2, 0x09, 0xcc, 0x56, 0x28, 0xaa, 0x7e, 0x1f, 0x24,
	0x8d, 0xac, 0x2f, 0xd8, 0x8b, 0xfc, 0xb2, 0x34, 0x87, 0x0c, 0x12, 0x2b, 0xc4, 0xdf, 0xc0, 0xe8,
	0x39, 0xdd, 0xd3, 0x25, 0x4f, 0xb9, 0xe2, 0x28, 0xc9, 0x0c, 0x42, 0x59, 0x1f, 0x67, 0x8e, 0x18,
	0xce, 0x8f, 0x6b, 0x0e, 0xd6, 0x78, 0xd2, 0x9a, 0xc4, 0x7f, 0x78, 0xe0, 0xbf, 0xd6, 0x6a, 0x12,
	0x77, 0x03, 0x18, 0xce, 0x47, 0xcd, 0x2e, 0xaa, 0xb0, 0x0e, 0xe7, 0x73, 0x18, 0xc8, 0x43, 0x61,
	0x02, 0x36, 0x6e, 0x0c, 0xe7, 0x27, 0xb5, 0xd9, 0x95, 0x6c, 0x24, 0x8d, 0x99, 0x26, 0x96, 0x2a,
	0xf7, 0x58, 0xb1, 0xcd, 0xac, 0x35, 0x96, 0xd1, 0x5d, 0x43, 0x36, 0xbd, 0xd6, 0xcf, 0x97, 0x26,
	0x5d, 0xca, 0x57, 0x86, 0x6a, 0x61, 0x52, 0x8b, 0xe4, 0x31, 0x1c, 0xef, 0x68, 0x56, 0xac, 0x29,
	0x53, 0x85, 0x40, 0x61, 0x76, 0x06, 0xc6, 0xe4, 0x06, 0x4e, 0x9e, 0xc1, 0x88, 0x75, 0xd2, 0x61,
	0xb8, 0x38, 0x9c, 0xdf, 0xab, 0x9c, 0xec, 0x66, 0x2a, 0xb9, 0x62, 0xa8, 0x33, 0x5f, 0x64, 0xfc,
	0xb7, 0x02, 0xf9, 0xaa, 0x7a, 0x7b, 0x1a, 0x59, 0xf7, 0x81, 0x3c, 0x5c, 0xa0, 0x90, 0x3c, 0xcf,
	0xea, 0xd7, 0xa7, 0x01, 0xc8, 0x87, 0x00, 0xf2, 0xc0, 0xf2, 0x6c, 0xcd, 0x37, 0x7c, 0x55, 0xf1,
	0xb8, 0x83, 0xe8, 0xdd, 0x7b, 0x91, 0xaf, 0x0a, 0xa6, 0xf8, 0xca, 0xd0, 0x38, 0x4c, 0x5a, 0xa0,
	0x1a, 0x19, 0xa3, 0x66, 0x64, 0xfc, 0xed, 0xe8, 0x89, 0xb5, 0xd9, 0xaa, 0x77, 0x6b, 0x67, 0xdb,
	0x78, 0xbd, 0xa6, 0xf1, 0xda, 0x46, 0xf3, 0x6f, 0x69, 0xb4, 0xe0, 0xb6, 0x46, 0xeb, 0x5f, 0x69,
	0xb4, 0xb6, 0x3f, 0x06, 0xdd, 0xfe, 0x90, 0x30, 0x5e, 0xa0, 0x8d, 0xa1, 0x1a, 0x63, 0x1f, 0x43,
	0x50, 0x11, 0xc7, 0xf2, 0xeb, 0xbd, 0xaa, 0x26, 0x6d, 0xb0, 0x49, 0xd0, 0x52, 0xe6, 0xc6, 0x74,
	0xab, 0xa7, 0xa0, 0xd7, 0x99, 0x82, 0x36, 0x77, 0xbd, 0x3a, 0x77, 0xf3, 0x3f, 0x5d, 0xe8, 0x2f,
	0x50, 0xe8, 0xa1, 0x47, 0x1e, 0x83, 0xf7, 0x6d, 0x9a, 0x92, 0xf6, 0x96, 0xfa, 0x13, 0x30, 0x19,
	0x75, 0x2f, 0x8e, 0x8f, 0x3e, 0x73, 0xc8, 0x23, 0xf0, 0xde, 0xe0, 0x81, 0xd4, 0x7d, 0xd2, 0x8c,
	0xec, 0xc9, 0xb0, 0x26, 0xb7, 0x7e, 0xec, 0x8f, 0xc8, 0x33, 0x08, 0xec, 0x3b, 0x4e, 0xee, 0x5d,
	0x79, 0xd6, 0x2b, 0xeb, 0x07, 0x33, 0xfb, 0x9d, 0x99, 0xd5, 0xdf, 0x99, 0xd9, 0x4b, 0xfd, 0x9d,
	0x89, 0x8f, 0xc8, 0x47, 0xe0, 0xbd, 0x42, 0xd5, 0x5c, 0xd0, 0x7c, 0x6b, 0xae, 0xfb, 0xa2, 0xfb,
	0xab, 0x4e, 0x1b, 0x39, 0x69, 0x47, 0x6a, 0x27, 0x8f, 0x37, 0xb6, 0x7c, 0x0a, 0x81, 0xfd, 0xab,
	0x34, 0x4e, 0x75, 0xbf, 0x2e, 0xd7, 0xcd, 0x97, 0x81, 0x71, 0xee, 0xe9, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0x50, 0xdf, 0x37, 0x8f, 0x09, 0x00, 0x00,
}
